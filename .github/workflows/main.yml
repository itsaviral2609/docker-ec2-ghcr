name: Flask application deployment on EC2 and publish to GHCR

on:
  push:
    branches:
      - main

jobs:
  # Step 1: Build and push the Docker image to GHCR
  build_and_push:
    name: Build image and push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Building Flask application Dockerfile
        run: docker build -t ghcr.io/${{ github.repository_owner }}/flask-image:latest .

      - name: Pushing Flask application to GHCR
        run: docker push ghcr.io/${{ github.repository_owner }}/flask-image:latest

  # Step 2: Deploy on EC2
  deploy:
    name: Deploy on EC2 instance
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: SSH into EC2 and Deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            # Update package list
            sudo apt update

            # Install Docker if not already installed
            if ! command -v docker &> /dev/null
            then
                sudo apt install -y docker.io
                sudo systemctl start docker
                sudo systemctl enable docker
                sudo usermod -aG docker $USER
            fi

            # Restart Docker service to ensure it is running
            sudo systemctl restart docker

            # Ensure the user has permission to run Docker commands
            newgrp docker || true

            # Log in to GHCR inside EC2 instance
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            # Pull the latest image
            docker pull ghcr.io/${{ github.repository_owner }}/flask-image:latest

            # Stop and remove existing container (if running)
            docker stop flask-app || true
            docker rm flask-app || true

            # Run the new container
            docker run -d -p 5000:5000 --name flask-app ghcr.io/${{ github.repository_owner }}/flask-image:latest
